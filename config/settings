#!/bin/bash

#The directory, where the raw markdown articles are saved
ARTICLES=articles/

#The directory, where the html files are going to be saved
ENCODED=encoded/

#The blog title, which is used in the header and <title>
BLOGTITLE="Example blog"

#The stylesheet to use in the styles folder
STYLESHEET="lb.css"

#Limit to show on first page
SHOWPOSTS=250

#Display the author of the article
SHOWAUTHOR=false

#Display the date of the article
SHOWDATE=true

#Change the subtitle
SUBTITLE="A very special test blog..."

#Display the subtitle or not?
SHOWSUBTITLE=true

#Display the search bar?
SHOWSEARCH=true

#What text should be displayed as placeholder in the search box?
SEARCHTEXT="Search..."

#What text should be displayed on the search button?
SEARCHBUTTONTEXT="Search"

#Which domain name can be used to reach the blog (i.e. "www.example.net")?
VHOST="www.example.net"

#Should the blog be reached via HTTPS?
HTTPSENABLED=false

#Do you wish an RSS feed to be provided?
RSS=true

#File location for the RSS feed
RSSFILE=feed.rss

#Amount of articles in RSS feed
SHOWRSSPOSTS=10

#Show the credits?
SHOWCREDITS=true

SHOWPERMLINKS=true

########## IMPORTANT STUFF ######### DO NOT DELETE #########

## Special thanks to Parckwart for this code
## www.parckwart.de

function urldecode {
	local url_encoded="${1//+/ }"
	printf '%b' "${url_encoded//%/\\x}"
}

[ -z "$POST_STRING" -a "$REQUEST_METHOD" = "POST" -a ! -z "$CONTENT_LENGTH" ] && read -n $CONTENT_LENGTH POST_STRING

OIFS=$IFS
IFS='=&'
parm_get=($QUERY_STRING)
parm_post=($POST_STRING)
IFS=$OIFS

declare -A get
declare -A post

for ((i=0; i<${#parm_get[@]}; i+=2)); do
	get[${parm_get[i]}]=$(urldecode ${parm_get[i+1]})
done

for ((i=0; i<${#parm_post[@]}; i+=2)); do
	post[${parm_post[i]}]=$(urldecode ${parm_post[i+1]})
done

